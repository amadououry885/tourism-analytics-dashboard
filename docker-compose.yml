services:
  db:
    image: postgis/postgis:15-3.3
    container_name: tourism_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tourism
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    # If you do NOT need to connect from host tools (psql), comment out the next 2 lines:
    # ports:
    #   - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: tourism_redis
    # If you do NOT need to connect from host tools (redis-cli), comment out:
    # ports:
    #   - "6379:6379"
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: tourism_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      POSTGRES_DB: tourism
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
      REDIS_URL: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: tourism_api.settings
      # ALLOWED_HOSTS: "*"   # uncomment in dev if needed
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: tourism_frontend
    ports:
      - "3000:3000"            # ðŸ‘ˆ host:container (moved host port to 3001)
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true   # helps file watching in some setups
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  db_data:
